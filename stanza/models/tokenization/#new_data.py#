from bisect import bisect_right
from copy import copy
import json
import numpy as np
import random
import logging
import re
import torch
import pickle
import os
import stanza.utils.default_paths as default_paths
from .vocab import Vocab
from stanza.models.tokenization.trie import Trie, main

logger = logging.getLogger('stanza')
paths = default_paths.get_default_paths()

def filter_consecutive_whitespaces(para):
        filtered = []
            for i, (char, label) in enumerate(para):
                        if i > 0:
                                        if char == ' ' and para[i-1][0] == ' ':
                                                            continue

                                                                filtered.append((char, label))

                                                                    return filtered

                                                                NEWLINE_WHITESPACE_RE = re.compile(r'\n\s*\n')
                                                                NUMERIC_RE = re.compile(r'^([\d]+[,\.]*)+$')
                                                                WHITESPACE_RE = re.compile(r'\s')

                                                                def load_dict(args):

                                                                        shortname = args["shorthand"]
                                                                            dict_path = "./stanza/models/tokenization/%s.dict" % (shortname)

                                                                                if not os.path.exists(dict_path):
                                                                                            #creating a new dictionary file
                                                                                            tokenize_dir = paths["TOKENIZE_DATA_DIR"]
                                                                                                    train_path = f"{tokenize_dir}/{shortname}.train.gold.conllu"
                                                                                                            external_dict_path = f"{tokenize_dir}/{shortname}-externaldict.txt"
                                                                                                                    if not os.path.exists(external_dict_path):
                                                                                                                                    logger.info("External dictionary not found!")
                                                                                                                                                external_dict_path = None
                                                                                                                                                        if not os.path.exists(train_path):
                                                                                                                                                                        logger.info("Training dataset does not exist, thus cannot create dictionary" % (shortname))
                                                                                                                                                                                    train_path = None

                                                                                                                                                                                            #Still need to figure out how to inform back to the training that dict feat is disabled and the dimension of feats needs to
                                                                                                                                                                                                    #be reduced.
                                                                                                                                                                                                            if train_path==None and external_dict_path==None:
                                                                                                                                                                                                                            logger.info("Cannot find or create any dictionary due to files not found! Dictionary feature is disabled.")
                                                                                                                                                                                                                                        return None

                                                                                                                                                                                                                                            main(shortname, train_path, external_dict_path, dict_path)

                                                                                                                                                                                                                                                with open(dict_path, 'rb') as config_dict_file_start:
                                                                                                                                                                                                                                                            dict_tree = pickle.load(config_dict_file_start)

                                                                                                                                                                                                                                                                return dict_tree



                                                                                                                                                                                                                                                            class DataLoader:
                                                                                                                                                                                                                                                                    def __init__(self, args, input_files={'txt': None, 'label': None}, input_text=None, input_data=None, vocab=None, evaluation=False):
                                                                                                                                                                                                                                                                                self.args = args
                                                                                                                                                                                                                                                                                        self.eval = evaluation
                                                                                                                                                                                                                                                                                                self.dict_tree = None if self.args["dict_feat"] == 0 else load_dict(args)
                                                                                                                                                                                                                                                                                                        # get input files
                                                                                                                                                                                                                                                                                                                txt_file = input_files['txt']
                                                                                                                                                                                                                                                                                                                        label_file = input_files['label']

                                                                                                                                                                                                                                                                                                                                # Load data and process it
                                                                                                                                                                                                                                                                                                                                        if input_data is not None:
                                                                                                                                                                                                                                                                                                                                                        self.data = input_data
                                                                                                                                                                                                                                                                                                                                        else:
                                                                                                                                                                                                                                                                                                                                                        # set up text from file or input string
                                                                                                                                                                                                                                                                                                                                                        assert txt_file is not None or input_text is not None
                                                                                                                                                                                                                                                                                                                                                                    if input_text is None:
                                                                                                                                                                                                                                                                                                                                                                                        with open(txt_file) as f:
                                                                                                                                                                                                                                                                                                                                                                                                                text = ''.join(f.readlines()).rstrip()
                                                                                                                                                                                                                                                                                                                                                                    else:
                                                                                                                                                                                                                                                                                                                                                                                        text = input_text

                                                                                                                                                                                                                                                                                                                                                                                                    if label_file is not None:
                                                                                                                                                                                                                                                                                                                                                                                                                        with open(label_file) as f:
                                                                                                                                                                                                                                                                                                                                                                                                                                                labels = ''.join(f.readlines()).rstrip()
                                                                                                                                                                                                                                                                                                                                                                                                    else:
                                                                                                                                                                                                                                                                                                                                                                                                                        labels = '\n\n'.join(['0' * len(pt.rstrip()) for pt in NEWLINE_WHITESPACE_RE.split(text)])

                                                                                                                                                                                                                                                                                                                                                                                                                                    skip_newline = args.get('skip_newline', False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                self.data = [[(WHITESPACE_RE.sub(' ', char), int(label)) # substitute special whitespaces
in dict
                                                                                                                                                                                                                                                                                                                                                                                                                                                              time, this combines sentences in paragraph (indexed by id_pair[0]) starting sentence (indexed
 pad_len=pad_len)
